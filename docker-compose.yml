version: "3.8"

services:
  # Orion is the context broker
  orion:
    labels:
      org.fiware: 'tutorial'
    image: fiware/orion:latest
    hostname: orion
    container_name: fiware-orion1
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "1026"
    ports:
      - "1026:1026"
    command: -dbhost mongo-db -logLevel DEBUG
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1
      interval: 5s
      
  # MSSQL Database to hold Orders
  sql-server-db:
    container_name: sql-cobit-db
    image: iasonasiasonos/dih2_cobit_db:latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "2Secure*Password2"
      ACCEPT_EULA: "Y"

  # IoT-Agent is configured for the JSON Protocol
  iot-agent:
    image: fiware/iotagent-json:latest
    hostname: iot-agent
    container_name: fiware-iot-agent1
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "4041"
      - "7896"
    ports:
      - "4041:4041"
      - "7896:7896"
    environment:
      - IOTA_CB_HOST=orion
      - IOTA_CB_PORT=1026
      - IOTA_NORTH_PORT=4041
      - IOTA_REGISTRY_TYPE=mongodb
      - IOTA_LOG_LEVEL=DEBUG
      - IOTA_DEFAULT_EXPRESSION_LANGUAGE=jexl
      - IOTA_TIMESTAMP=true
      - IOTA_CB_NGSI_VERSION=v2
      - IOTA_AUTOCAST=true
      - IOTA_MONGO_HOST=mongo-db
      - IOTA_MONGO_PORT=27017
      - IOTA_MONGO_DB=iotagentjson
      - IOTA_HTTP_PORT=7896
      - IOTA_PROVIDER_URL=http://iot-agent:4041
      - IOTA_DEFAULT_RESOURCE=/iot/json
    healthcheck:
      interval: 5s


  # Tutorial acts as a series of dummy IoT Sensors over HTTP
  cobit-webapp:
    image: iasonasiasonos/dih2_webapp:latest
    container_name: fiware-cobit-webapp1
    hostname: iot-sensors
    depends_on:
      - orion
      - iot-agent
    networks:
      default:
        aliases:
          - tutorial
          - context-provider
    expose:
      - "3000"
      - "3001"
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - "DEBUG=tutorial:*"
      - "WEB_APP_PORT=3000"
      - "IOTA_HTTP_HOST=iot-agent"
      - "IOTA_HTTP_PORT=7896"
      - "IOTA_DEFAULT_RESOURCE=/iot/json"
      - "DUMMY_DEVICES_PORT=3001"
      - "DUMMY_DEVICES_TRANSPORT=HTTP"
      - "DUMMY_DEVICES_API_KEY=4jggokgpepnvsb2uv4s40d59ov"
      - "DUMMY_DEVICES_PAYLOAD=JSON"
      - "CONTEXT_BROKER=http://orion:1026/v2"

  # Database
  mongo-db:
    labels:
      org.fiware: 'tutorial'
    image: mongo:latest
    hostname: mongo-db
    container_name: db-mongo1
    expose:
      - "27017"
    ports:
      - "27017:27017"
    networks:
      - default
    volumes:
      - mongo-db:/data
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`; 
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
      interval: 5s

  mysql-db:
      restart: always
      image: mysql:latest
      hostname: mysql-db
      container_name: db-mysql1
      expose:
          - "3306"
      ports:
          - "3306:3306"
      networks:
          - default
      environment:
          - "MYSQL_ROOT_PASSWORD=123"
          - "MYSQL_ROOT_HOST=%"

  cygnus:
      image: fiware/cygnus-ngsi:latest
      hostname: cygnus
      container_name: fiware-cygnus1
      networks:
          - default
      depends_on:
          - mysql-db
      expose:
          - "5080"
      ports:
          - "5050:5050"
          - "5080:5080"
      environment:
          - "CYGNUS_MYSQL_HOST=mysql-db"
          - "CYGNUS_MYSQL_PORT=3306"
          - "CYGNUS_MYSQL_USER=root"
          - "CYGNUS_MYSQL_PASS=123"
          - "CYGNUS_LOG_LEVEL=DEBUG"
          - "CYGNUS_SERVICE_PORT=5050"
          - "CYGNUS_API_PORT=5080"

  grafana:
    image: grafana/grafana
    container_name: grafana1
    depends_on:
        - mysql-db
    ports:
        - "3003:3000"
    environment:
        - GF_INSTALL_PLUGINS=https://github.com/orchestracities/grafana-map-plugin/archive/master.zip;grafana-map-plugin,grafana-clock-panel,grafana-worldmap-panel
    networks:
      - default

networks:
    default:
        ipam:
            config:
                - subnet: 172.19.1.0/24

volumes:
  mongo-db: ~
  grafana: ~
  mysql-db: ~